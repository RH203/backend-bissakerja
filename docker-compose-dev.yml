services:
  backend_laravel:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_laravel
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    command: php artisan serve --host=0.0.0.0 --port=8000
    # environment:
    #   - DB_CONNECTION=mysql
    #   - DB_HOST=localhost
    #   - DB_PORT=3306
    #   - DB_DATABASE=db_jatim_bissa
    #   - DB_USERNAME=db_jatim_bissa
    #   - DB_PASSWORD=xWsd38YFsXxsbTtS
    ports:
      - "8000:8000" # akses langsung Laravel dev server
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_server
    volumes:
      - ./:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8002:80" # akses nginx di localhost:8002
    depends_on:
      - backend_laravel
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    image: mysql:8
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_jatim_bissa
      MYSQL_USER: root
      MYSQL_PASSWORD: secret}
    ports:
      # Gunakan port yang berbeda untuk menghindari konflik
      - "${DB_PORT:-3307}:3306"
    volumes:
      # Persist data MySQL
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
    ports:
      - "${PMA_PORT:-8080}:80"
    depends_on:
      - mysql
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
